/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pruebas;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetAdapter;
import java.awt.dnd.DropTargetDropEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;
import javax.swing.TransferHandler;

/**
 *
 * @author Carlo
 */
public class ColocarNave extends javax.swing.JFrame {
    
    
    private JButton[][] casillas = new JButton[10][10];
    private int mouseX, mouseY;
    
    
    

    /**
     * Creates new form ColocarNave
     */
    public ColocarNave() {
        initComponents();
        inicializarTablero();
        jPanel1.setLayout(null);

        barco1.setTransferHandler(new TransferHandler("icon"));

        // Configurar DropTargetListener para el tablero
        new DropTarget(panelTablero, DnDConstants.ACTION_COPY_OR_MOVE, new DropTargetAdapter() {
            @Override
            public void drop(DropTargetDropEvent dtde) {
                try {
                    Transferable transferable = dtde.getTransferable();
                    if (transferable.isDataFlavorSupported(DataFlavor.imageFlavor)) {
                        dtde.acceptDrop(DnDConstants.ACTION_COPY);

                        ImageIcon droppedIcon = (ImageIcon) transferable.getTransferData(DataFlavor.imageFlavor);

                        // Crear nuevo JButton con la imagen del barco
                        JButton nuevoBarco = new JButton(droppedIcon);
                        nuevoBarco.setPreferredSize(new Dimension(droppedIcon.getIconWidth(), droppedIcon.getIconHeight()));
                        nuevoBarco.setContentAreaFilled(false);
                        nuevoBarco.setBorderPainted(false);

                        // Obtener la posición donde se soltó
                        Point dropPoint = dtde.getLocation();
                        int x = (dropPoint.x / (panelTablero.getWidth() / 10)); // calcular la casilla
                        int y = (dropPoint.y / (panelTablero.getHeight() / 10));

                        // Asegurarse de que no sea una casilla ya ocupada
                        if (casillas[x][y] == null) {
                            // Colocar el barco en la casilla
                            casillas[x][y] = nuevoBarco;

                            // Añadir el nuevo barco al tablero en la posición correcta
                            panelTablero.add(nuevoBarco);
                            int casillaAncho = panelTablero.getWidth() / 10;
                            int casillaAlto = panelTablero.getHeight() / 10;
                            nuevoBarco.setBounds(x * casillaAncho, y * casillaAlto, casillaAncho, casillaAlto);

                            panelTablero.revalidate();
                            panelTablero.repaint();

                            dtde.dropComplete(true);
                        } else {
                            dtde.rejectDrop();
                        }
                    } else {
                        dtde.rejectDrop();
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    dtde.rejectDrop();
                }
            }
        }, true);
    
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelTablero = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        barco3 = new javax.swing.JLabel();
        barco2 = new javax.swing.JLabel();
        barco1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        panelTablero.setPreferredSize(new java.awt.Dimension(500, 500));
        panelTablero.setLayout(new java.awt.GridLayout(10, 10));

        barco3.setText("Barco");

        barco2.setText("Barco");

        barco1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        barco1.setText("Barco");
        barco1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        barco1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        barco1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        barco1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barco1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                barco1MouseMoved(evt);
            }
        });
        barco1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barco1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                barco1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(barco1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(barco2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(barco3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barco2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barco3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barco1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelTablero, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void barco1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barco1MousePressed
        // Guardar la posición inicial del ratón cuando se hace clic sobre el barco
    mouseX = evt.getX();
    mouseY = evt.getY();
    }//GEN-LAST:event_barco1MousePressed

    private void barco1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barco1MouseDragged
        // Calcular la nueva posición del barco en función del movimiento del ratón
        int nuevaPosX = barco1.getX() + evt.getX() - mouseX;
        int nuevaPosY = barco1.getY() + evt.getY() - mouseY;

        // Mover el barco a la nueva posición
        barco1.setLocation(nuevaPosX, nuevaPosY);
    }//GEN-LAST:event_barco1MouseDragged

    private void barco1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barco1MouseReleased
     // Obtiene la nueva posición del barco después de soltarlo
        Point dropPoint = evt.getPoint();

        // Calcular las coordenadas de la casilla más cercana en base al tamaño del panel
        int x = (dropPoint.x / (panelTablero.getWidth() / 10));  // calcular la casilla en X
        int y = (dropPoint.y / (panelTablero.getHeight() / 10)); // calcular la casilla en Y

        // Asegurarse de que no sea una casilla ya ocupada
        if (casillas[x][y] == null) {
            // Colocar el barco en la casilla
            casillas[x][y] = barco1;

            // Ajustar la posición del barco dentro del tablero, asegurándonos de que encaje en la casilla
            int casillaAncho = panelTablero.getWidth() / 10;
            int casillaAlto = panelTablero.getHeight() / 10;

            barco1.setBounds(x * casillaAncho, y * casillaAlto, casillaAncho, casillaAlto);

            // Actualizar el tablero visualmente
            panelTablero.revalidate();
            panelTablero.repaint();
        } else {
            // Si la casilla ya está ocupada, devolver el barco a su lugar original
            barco1.setLocation(mouseX, mouseY); // Devolver al punto de inicio
        }
    }//GEN-LAST:event_barco1MouseReleased

    private void barco1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barco1MouseMoved
      
    }//GEN-LAST:event_barco1MouseMoved

    
    
    
    private void inicializarTablero() {
    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            casillas[i][j] = new JButton();
            casillas[i][j].setBackground(Color.CYAN);
            casillas[i][j].setOpaque(true);
            casillas[i][j].setBorder(BorderFactory.createLineBorder(Color.BLACK));
            panelTablero.add(casillas[i][j]);
        }
    }
    
    
    
    
    
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColocarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColocarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColocarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColocarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ColocarNave().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton barco1;
    private javax.swing.JLabel barco2;
    private javax.swing.JLabel barco3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelTablero;
    // End of variables declaration//GEN-END:variables
}

